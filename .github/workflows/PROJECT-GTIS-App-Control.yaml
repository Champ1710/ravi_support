description: "Manages startup and shutdown operations for the GTIS application"

env:
  GIT_SSH_NO_VERIFY: "true"

on:
  workflow_call:
    inputs:
      server:
        description: "input into build for variable${server}"
        required: true
        type: string
      timeout:
        description: "Define the timeout for the ssh connection"
        required: false
        type: string
        default: "300"
      vault-folder:
        description: "Environment"
        required: true
        type: string
        default: "ngas-gtis/dev/ssh"
      ACTION:
        description: "startup or shutdown"
        required: true
        type: string

jobs:
  app-control:
    name: Run ${{ inputs.ACTION }} script remotely
    permissions:
      contents: read
      id-token: write
      actions: read
      security-events: write
    runs-on: ${{ vars.RUNNERSET_DEFAULT }}

    steps:
      - name: Get Secrets
        uses: dukeenergy-corp/duke-actions/composite/vault-fetch@master
        with:
          deploy-environment: products/${{ inputs.vault-folder }}
          secrets: |
            ssh USER | SSH_USER;
            ssh LCDCGTISAPPD01 | SSH_KEY;

      - name: Set SSH Identity File
        run: |
          sudo mkdir -p ~/.ssh
          echo "$SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
          echo "SSH_KEY=private_key.pem" >> $GITHUB_ENV

      - name: Execute the script
        run: |
          if [[ "${{ inputs.ACTION }}" == "startup" ]]; then
            ssh -i $SSH_KEY -o StrictHostKeyChecking=no $SSH_USER@${{ inputs.server }} 'bash -s' < startup.sh
          elif [[ "${{ inputs.ACTION }}" == "shutdown" ]]; then
            ssh -i $SSH_KEY -o StrictHostKeyChecking=no $SSH_USER@${{ inputs.server }} 'bash -s' < shutdown.sh
          else
            echo "Invalid action: ${{ inputs.ACTION }}"
            exit 1
          fi
